name: Terraform CI/CD For Deploying Yandex Cloud Services
run-name: ${{ github.actor }} triggered the pipeline

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
env:
  YC_SERVICE_ACCOUNT_KEY_FILE: ${{ secrets.YC_SERVICE_ACCOUNT_KEY_FILE }} # yandex cloud account credentials file
  ACCESS_KEY: ${{ secrets.ACCESS_KEY }} # s3 key
  SECRET_KEY: ${{ secrets.SECRET_KEY }} # s3 key
  TF_VAR_ssh_key: ${{ secrets.TF_VAR_SSH_KEY }} # terraform public key env
  ANSIBLE_HOST_KEY_CHECKING: False # disable ssh connection approve

jobs:
  build-infra:
    name: terraform-ci-cd
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="access_key=$ACCESS_KEY" -backend-config="secret_key=$SECRET_KEY"
        working-directory: ./
      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ./
      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve
        working-directory: ./
      - name: Create ansible inventory
        run: |
          terraform show -json | python3 script/parse_terraform_show.py | python3 script/format_ansible_inventory.py
      - name: Run Ansible playbook
        uses: dawidd6/action-ansible-playbook@v2.5.0
        with:
          directory: ./
          playbook: ansible/playbook.yaml
          key: ${{ secrets.ANSIBLE_PRIVATE_KEY }}
          inventory: ./inventory.ini # generated in previous step
#          inventory: ${{ secrets.ansible_inventory }} # the ansible inventory to use, stored as "ansible_inventory" in the GitHub secrets

#      - name: Terraform Destroy
#        id: destroy
#        run: terraform destroy --auto-approve
#        working-directory: ./